// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pagespeed_output.proto

#ifndef PROTOBUF_pagespeed_5foutput_2eproto__INCLUDED
#define PROTOBUF_pagespeed_5foutput_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace pagespeed {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_pagespeed_5foutput_2eproto();
void protobuf_AssignDesc_pagespeed_5foutput_2eproto();
void protobuf_ShutdownFile_pagespeed_5foutput_2eproto();

class Savings;
class InputInformation;
class ResultDetails;
class ImageDimensionDetails;
class RequestDetails;
class StylesInBodyDetails;
class ResourceOrderingDetails;
class CachingDetails;
class ParallelizableHostDetails;
class AvoidCssImportDetails;
class AvoidDocumentWriteDetails;
class PreferAsyncResourcesDetails;
class Result;
class Version;
class Results;
class FormatArgument;
class ResultText;

enum FormatArgument_ArgumentType {
  FormatArgument_ArgumentType_URL = 1,
  FormatArgument_ArgumentType_STRING_LITERAL = 2,
  FormatArgument_ArgumentType_INT_LITERAL = 3,
  FormatArgument_ArgumentType_BYTES = 4,
  FormatArgument_ArgumentType_DURATION = 5
};
bool FormatArgument_ArgumentType_IsValid(int value);
const FormatArgument_ArgumentType FormatArgument_ArgumentType_ArgumentType_MIN = FormatArgument_ArgumentType_URL;
const FormatArgument_ArgumentType FormatArgument_ArgumentType_ArgumentType_MAX = FormatArgument_ArgumentType_DURATION;
const int FormatArgument_ArgumentType_ArgumentType_ARRAYSIZE = FormatArgument_ArgumentType_ArgumentType_MAX + 1;

// ===================================================================

class Savings : public ::google::protobuf::MessageLite {
 public:
  Savings();
  virtual ~Savings();
  
  Savings(const Savings& from);
  
  inline Savings& operator=(const Savings& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const Savings& default_instance();
  
  void Swap(Savings* other);
  
  // implements Message ----------------------------------------------
  
  Savings* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Savings& from);
  void MergeFrom(const Savings& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 dns_requests_saved = 1;
  inline bool has_dns_requests_saved() const;
  inline void clear_dns_requests_saved();
  static const int kDnsRequestsSavedFieldNumber = 1;
  inline ::google::protobuf::int32 dns_requests_saved() const;
  inline void set_dns_requests_saved(::google::protobuf::int32 value);
  
  // optional int32 requests_saved = 2;
  inline bool has_requests_saved() const;
  inline void clear_requests_saved();
  static const int kRequestsSavedFieldNumber = 2;
  inline ::google::protobuf::int32 requests_saved() const;
  inline void set_requests_saved(::google::protobuf::int32 value);
  
  // optional int32 response_bytes_saved = 3;
  inline bool has_response_bytes_saved() const;
  inline void clear_response_bytes_saved();
  static const int kResponseBytesSavedFieldNumber = 3;
  inline ::google::protobuf::int32 response_bytes_saved() const;
  inline void set_response_bytes_saved(::google::protobuf::int32 value);
  
  // optional int32 page_reflows_saved = 4;
  inline bool has_page_reflows_saved() const;
  inline void clear_page_reflows_saved();
  static const int kPageReflowsSavedFieldNumber = 4;
  inline ::google::protobuf::int32 page_reflows_saved() const;
  inline void set_page_reflows_saved(::google::protobuf::int32 value);
  
  // optional int32 request_bytes_saved = 5;
  inline bool has_request_bytes_saved() const;
  inline void clear_request_bytes_saved();
  static const int kRequestBytesSavedFieldNumber = 5;
  inline ::google::protobuf::int32 request_bytes_saved() const;
  inline void set_request_bytes_saved(::google::protobuf::int32 value);
  
  // optional int32 critical_path_length_saved = 6;
  inline bool has_critical_path_length_saved() const;
  inline void clear_critical_path_length_saved();
  static const int kCriticalPathLengthSavedFieldNumber = 6;
  inline ::google::protobuf::int32 critical_path_length_saved() const;
  inline void set_critical_path_length_saved(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:pagespeed.Savings)
 private:
  mutable int _cached_size_;
  
  ::google::protobuf::int32 dns_requests_saved_;
  ::google::protobuf::int32 requests_saved_;
  ::google::protobuf::int32 response_bytes_saved_;
  ::google::protobuf::int32 page_reflows_saved_;
  ::google::protobuf::int32 request_bytes_saved_;
  ::google::protobuf::int32 critical_path_length_saved_;
  friend void  protobuf_AddDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_AssignDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_ShutdownFile_pagespeed_5foutput_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Savings* default_instance_;
};
// -------------------------------------------------------------------

class InputInformation : public ::google::protobuf::MessageLite {
 public:
  InputInformation();
  virtual ~InputInformation();
  
  InputInformation(const InputInformation& from);
  
  inline InputInformation& operator=(const InputInformation& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const InputInformation& default_instance();
  
  void Swap(InputInformation* other);
  
  // implements Message ----------------------------------------------
  
  InputInformation* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const InputInformation& from);
  void MergeFrom(const InputInformation& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 number_resources = 1;
  inline bool has_number_resources() const;
  inline void clear_number_resources();
  static const int kNumberResourcesFieldNumber = 1;
  inline ::google::protobuf::int32 number_resources() const;
  inline void set_number_resources(::google::protobuf::int32 value);
  
  // optional int32 number_hosts = 2;
  inline bool has_number_hosts() const;
  inline void clear_number_hosts();
  static const int kNumberHostsFieldNumber = 2;
  inline ::google::protobuf::int32 number_hosts() const;
  inline void set_number_hosts(::google::protobuf::int32 value);
  
  // optional int64 total_request_bytes = 4;
  inline bool has_total_request_bytes() const;
  inline void clear_total_request_bytes();
  static const int kTotalRequestBytesFieldNumber = 4;
  inline ::google::protobuf::int64 total_request_bytes() const;
  inline void set_total_request_bytes(::google::protobuf::int64 value);
  
  // optional int32 number_static_resources = 5;
  inline bool has_number_static_resources() const;
  inline void clear_number_static_resources();
  static const int kNumberStaticResourcesFieldNumber = 5;
  inline ::google::protobuf::int32 number_static_resources() const;
  inline void set_number_static_resources(::google::protobuf::int32 value);
  
  // optional int64 html_response_bytes = 6;
  inline bool has_html_response_bytes() const;
  inline void clear_html_response_bytes();
  static const int kHtmlResponseBytesFieldNumber = 6;
  inline ::google::protobuf::int64 html_response_bytes() const;
  inline void set_html_response_bytes(::google::protobuf::int64 value);
  
  // optional int64 text_response_bytes = 7;
  inline bool has_text_response_bytes() const;
  inline void clear_text_response_bytes();
  static const int kTextResponseBytesFieldNumber = 7;
  inline ::google::protobuf::int64 text_response_bytes() const;
  inline void set_text_response_bytes(::google::protobuf::int64 value);
  
  // optional int64 css_response_bytes = 8;
  inline bool has_css_response_bytes() const;
  inline void clear_css_response_bytes();
  static const int kCssResponseBytesFieldNumber = 8;
  inline ::google::protobuf::int64 css_response_bytes() const;
  inline void set_css_response_bytes(::google::protobuf::int64 value);
  
  // optional int64 image_response_bytes = 9;
  inline bool has_image_response_bytes() const;
  inline void clear_image_response_bytes();
  static const int kImageResponseBytesFieldNumber = 9;
  inline ::google::protobuf::int64 image_response_bytes() const;
  inline void set_image_response_bytes(::google::protobuf::int64 value);
  
  // optional int64 javascript_response_bytes = 10;
  inline bool has_javascript_response_bytes() const;
  inline void clear_javascript_response_bytes();
  static const int kJavascriptResponseBytesFieldNumber = 10;
  inline ::google::protobuf::int64 javascript_response_bytes() const;
  inline void set_javascript_response_bytes(::google::protobuf::int64 value);
  
  // optional int64 flash_response_bytes = 11;
  inline bool has_flash_response_bytes() const;
  inline void clear_flash_response_bytes();
  static const int kFlashResponseBytesFieldNumber = 11;
  inline ::google::protobuf::int64 flash_response_bytes() const;
  inline void set_flash_response_bytes(::google::protobuf::int64 value);
  
  // optional int64 other_response_bytes = 12;
  inline bool has_other_response_bytes() const;
  inline void clear_other_response_bytes();
  static const int kOtherResponseBytesFieldNumber = 12;
  inline ::google::protobuf::int64 other_response_bytes() const;
  inline void set_other_response_bytes(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:pagespeed.InputInformation)
 private:
  mutable int _cached_size_;
  
  ::google::protobuf::int32 number_resources_;
  ::google::protobuf::int32 number_hosts_;
  ::google::protobuf::int64 total_request_bytes_;
  ::google::protobuf::int32 number_static_resources_;
  ::google::protobuf::int64 html_response_bytes_;
  ::google::protobuf::int64 text_response_bytes_;
  ::google::protobuf::int64 css_response_bytes_;
  ::google::protobuf::int64 image_response_bytes_;
  ::google::protobuf::int64 javascript_response_bytes_;
  ::google::protobuf::int64 flash_response_bytes_;
  ::google::protobuf::int64 other_response_bytes_;
  friend void  protobuf_AddDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_AssignDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_ShutdownFile_pagespeed_5foutput_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static InputInformation* default_instance_;
};
// -------------------------------------------------------------------

class ResultDetails : public ::google::protobuf::MessageLite {
 public:
  ResultDetails();
  virtual ~ResultDetails();
  
  ResultDetails(const ResultDetails& from);
  
  inline ResultDetails& operator=(const ResultDetails& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const ResultDetails& default_instance();
  
  void Swap(ResultDetails* other);
  
  // implements Message ----------------------------------------------
  
  ResultDetails* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ResultDetails& from);
  void MergeFrom(const ResultDetails& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(ResultDetails)
  // @@protoc_insertion_point(class_scope:pagespeed.ResultDetails)
 private:
  ::google::protobuf::internal::ExtensionSet _extensions_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_AssignDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_ShutdownFile_pagespeed_5foutput_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ResultDetails* default_instance_;
};
// -------------------------------------------------------------------

class ImageDimensionDetails : public ::google::protobuf::MessageLite {
 public:
  ImageDimensionDetails();
  virtual ~ImageDimensionDetails();
  
  ImageDimensionDetails(const ImageDimensionDetails& from);
  
  inline ImageDimensionDetails& operator=(const ImageDimensionDetails& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const ImageDimensionDetails& default_instance();
  
  void Swap(ImageDimensionDetails* other);
  
  // implements Message ----------------------------------------------
  
  ImageDimensionDetails* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ImageDimensionDetails& from);
  void MergeFrom(const ImageDimensionDetails& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 expected_height = 1;
  inline bool has_expected_height() const;
  inline void clear_expected_height();
  static const int kExpectedHeightFieldNumber = 1;
  inline ::google::protobuf::int32 expected_height() const;
  inline void set_expected_height(::google::protobuf::int32 value);
  
  // optional int32 expected_width = 2;
  inline bool has_expected_width() const;
  inline void clear_expected_width();
  static const int kExpectedWidthFieldNumber = 2;
  inline ::google::protobuf::int32 expected_width() const;
  inline void set_expected_width(::google::protobuf::int32 value);
  
  // optional int32 actual_height = 3;
  inline bool has_actual_height() const;
  inline void clear_actual_height();
  static const int kActualHeightFieldNumber = 3;
  inline ::google::protobuf::int32 actual_height() const;
  inline void set_actual_height(::google::protobuf::int32 value);
  
  // optional int32 actual_width = 4;
  inline bool has_actual_width() const;
  inline void clear_actual_width();
  static const int kActualWidthFieldNumber = 4;
  inline ::google::protobuf::int32 actual_width() const;
  inline void set_actual_width(::google::protobuf::int32 value);
  
  static const int kMessageSetExtensionFieldNumber = 4812135;
  static ::google::protobuf::internal::ExtensionIdentifier< ::pagespeed::ResultDetails,
      ::google::protobuf::internal::MessageTypeTraits< ::pagespeed::ImageDimensionDetails >, 11, false >
    message_set_extension;
  // @@protoc_insertion_point(class_scope:pagespeed.ImageDimensionDetails)
 private:
  mutable int _cached_size_;
  
  ::google::protobuf::int32 expected_height_;
  ::google::protobuf::int32 expected_width_;
  ::google::protobuf::int32 actual_height_;
  ::google::protobuf::int32 actual_width_;
  friend void  protobuf_AddDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_AssignDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_ShutdownFile_pagespeed_5foutput_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ImageDimensionDetails* default_instance_;
};
// -------------------------------------------------------------------

class RequestDetails : public ::google::protobuf::MessageLite {
 public:
  RequestDetails();
  virtual ~RequestDetails();
  
  RequestDetails(const RequestDetails& from);
  
  inline RequestDetails& operator=(const RequestDetails& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const RequestDetails& default_instance();
  
  void Swap(RequestDetails* other);
  
  // implements Message ----------------------------------------------
  
  RequestDetails* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RequestDetails& from);
  void MergeFrom(const RequestDetails& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 url_length = 1;
  inline bool has_url_length() const;
  inline void clear_url_length();
  static const int kUrlLengthFieldNumber = 1;
  inline ::google::protobuf::int32 url_length() const;
  inline void set_url_length(::google::protobuf::int32 value);
  
  // optional int32 cookie_length = 2;
  inline bool has_cookie_length() const;
  inline void clear_cookie_length();
  static const int kCookieLengthFieldNumber = 2;
  inline ::google::protobuf::int32 cookie_length() const;
  inline void set_cookie_length(::google::protobuf::int32 value);
  
  // optional int32 referer_length = 3;
  inline bool has_referer_length() const;
  inline void clear_referer_length();
  static const int kRefererLengthFieldNumber = 3;
  inline ::google::protobuf::int32 referer_length() const;
  inline void set_referer_length(::google::protobuf::int32 value);
  
  static const int kMessageSetExtensionFieldNumber = 5399921;
  static ::google::protobuf::internal::ExtensionIdentifier< ::pagespeed::ResultDetails,
      ::google::protobuf::internal::MessageTypeTraits< ::pagespeed::RequestDetails >, 11, false >
    message_set_extension;
  // @@protoc_insertion_point(class_scope:pagespeed.RequestDetails)
 private:
  mutable int _cached_size_;
  
  ::google::protobuf::int32 url_length_;
  ::google::protobuf::int32 cookie_length_;
  ::google::protobuf::int32 referer_length_;
  friend void  protobuf_AddDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_AssignDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_ShutdownFile_pagespeed_5foutput_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static RequestDetails* default_instance_;
};
// -------------------------------------------------------------------

class StylesInBodyDetails : public ::google::protobuf::MessageLite {
 public:
  StylesInBodyDetails();
  virtual ~StylesInBodyDetails();
  
  StylesInBodyDetails(const StylesInBodyDetails& from);
  
  inline StylesInBodyDetails& operator=(const StylesInBodyDetails& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const StylesInBodyDetails& default_instance();
  
  void Swap(StylesInBodyDetails* other);
  
  // implements Message ----------------------------------------------
  
  StylesInBodyDetails* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const StylesInBodyDetails& from);
  void MergeFrom(const StylesInBodyDetails& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 num_inline_style_blocks = 1;
  inline bool has_num_inline_style_blocks() const;
  inline void clear_num_inline_style_blocks();
  static const int kNumInlineStyleBlocksFieldNumber = 1;
  inline ::google::protobuf::int32 num_inline_style_blocks() const;
  inline void set_num_inline_style_blocks(::google::protobuf::int32 value);
  
  // repeated string external_styles = 2;
  inline int external_styles_size() const;
  inline void clear_external_styles();
  static const int kExternalStylesFieldNumber = 2;
  inline const ::std::string& external_styles(int index) const;
  inline ::std::string* mutable_external_styles(int index);
  inline void set_external_styles(int index, const ::std::string& value);
  inline void set_external_styles(int index, const char* value);
  inline void set_external_styles(int index, const char* value, size_t size);
  inline ::std::string* add_external_styles();
  inline void add_external_styles(const ::std::string& value);
  inline void add_external_styles(const char* value);
  inline void add_external_styles(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& external_styles() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_external_styles();
  
  static const int kMessageSetExtensionFieldNumber = 5469305;
  static ::google::protobuf::internal::ExtensionIdentifier< ::pagespeed::ResultDetails,
      ::google::protobuf::internal::MessageTypeTraits< ::pagespeed::StylesInBodyDetails >, 11, false >
    message_set_extension;
  // @@protoc_insertion_point(class_scope:pagespeed.StylesInBodyDetails)
 private:
  mutable int _cached_size_;
  
  ::google::protobuf::int32 num_inline_style_blocks_;
  ::google::protobuf::RepeatedPtrField< ::std::string> external_styles_;
  friend void  protobuf_AddDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_AssignDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_ShutdownFile_pagespeed_5foutput_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static StylesInBodyDetails* default_instance_;
};
// -------------------------------------------------------------------

class ResourceOrderingDetails : public ::google::protobuf::MessageLite {
 public:
  ResourceOrderingDetails();
  virtual ~ResourceOrderingDetails();
  
  ResourceOrderingDetails(const ResourceOrderingDetails& from);
  
  inline ResourceOrderingDetails& operator=(const ResourceOrderingDetails& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const ResourceOrderingDetails& default_instance();
  
  void Swap(ResourceOrderingDetails* other);
  
  // implements Message ----------------------------------------------
  
  ResourceOrderingDetails* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ResourceOrderingDetails& from);
  void MergeFrom(const ResourceOrderingDetails& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated string out_of_order_external_css = 1;
  inline int out_of_order_external_css_size() const;
  inline void clear_out_of_order_external_css();
  static const int kOutOfOrderExternalCssFieldNumber = 1;
  inline const ::std::string& out_of_order_external_css(int index) const;
  inline ::std::string* mutable_out_of_order_external_css(int index);
  inline void set_out_of_order_external_css(int index, const ::std::string& value);
  inline void set_out_of_order_external_css(int index, const char* value);
  inline void set_out_of_order_external_css(int index, const char* value, size_t size);
  inline ::std::string* add_out_of_order_external_css();
  inline void add_out_of_order_external_css(const ::std::string& value);
  inline void add_out_of_order_external_css(const char* value);
  inline void add_out_of_order_external_css(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& out_of_order_external_css() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_out_of_order_external_css();
  
  // repeated int32 out_of_order_inline_scripts = 2;
  inline int out_of_order_inline_scripts_size() const;
  inline void clear_out_of_order_inline_scripts();
  static const int kOutOfOrderInlineScriptsFieldNumber = 2;
  inline ::google::protobuf::int32 out_of_order_inline_scripts(int index) const;
  inline void set_out_of_order_inline_scripts(int index, ::google::protobuf::int32 value);
  inline void add_out_of_order_inline_scripts(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      out_of_order_inline_scripts() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_out_of_order_inline_scripts();
  
  static const int kMessageSetExtensionFieldNumber = 5206628;
  static ::google::protobuf::internal::ExtensionIdentifier< ::pagespeed::ResultDetails,
      ::google::protobuf::internal::MessageTypeTraits< ::pagespeed::ResourceOrderingDetails >, 11, false >
    message_set_extension;
  // @@protoc_insertion_point(class_scope:pagespeed.ResourceOrderingDetails)
 private:
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> out_of_order_external_css_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > out_of_order_inline_scripts_;
  friend void  protobuf_AddDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_AssignDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_ShutdownFile_pagespeed_5foutput_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ResourceOrderingDetails* default_instance_;
};
// -------------------------------------------------------------------

class CachingDetails : public ::google::protobuf::MessageLite {
 public:
  CachingDetails();
  virtual ~CachingDetails();
  
  CachingDetails(const CachingDetails& from);
  
  inline CachingDetails& operator=(const CachingDetails& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const CachingDetails& default_instance();
  
  void Swap(CachingDetails* other);
  
  // implements Message ----------------------------------------------
  
  CachingDetails* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CachingDetails& from);
  void MergeFrom(const CachingDetails& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 freshness_lifetime_millis = 1;
  inline bool has_freshness_lifetime_millis() const;
  inline void clear_freshness_lifetime_millis();
  static const int kFreshnessLifetimeMillisFieldNumber = 1;
  inline ::google::protobuf::int64 freshness_lifetime_millis() const;
  inline void set_freshness_lifetime_millis(::google::protobuf::int64 value);
  
  // optional bool is_heuristically_cacheable = 2;
  inline bool has_is_heuristically_cacheable() const;
  inline void clear_is_heuristically_cacheable();
  static const int kIsHeuristicallyCacheableFieldNumber = 2;
  inline bool is_heuristically_cacheable() const;
  inline void set_is_heuristically_cacheable(bool value);
  
  static const int kMessageSetExtensionFieldNumber = 4415843;
  static ::google::protobuf::internal::ExtensionIdentifier< ::pagespeed::ResultDetails,
      ::google::protobuf::internal::MessageTypeTraits< ::pagespeed::CachingDetails >, 11, false >
    message_set_extension;
  // @@protoc_insertion_point(class_scope:pagespeed.CachingDetails)
 private:
  mutable int _cached_size_;
  
  ::google::protobuf::int64 freshness_lifetime_millis_;
  bool is_heuristically_cacheable_;
  friend void  protobuf_AddDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_AssignDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_ShutdownFile_pagespeed_5foutput_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CachingDetails* default_instance_;
};
// -------------------------------------------------------------------

class ParallelizableHostDetails : public ::google::protobuf::MessageLite {
 public:
  ParallelizableHostDetails();
  virtual ~ParallelizableHostDetails();
  
  ParallelizableHostDetails(const ParallelizableHostDetails& from);
  
  inline ParallelizableHostDetails& operator=(const ParallelizableHostDetails& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const ParallelizableHostDetails& default_instance();
  
  void Swap(ParallelizableHostDetails* other);
  
  // implements Message ----------------------------------------------
  
  ParallelizableHostDetails* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ParallelizableHostDetails& from);
  void MergeFrom(const ParallelizableHostDetails& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string host = 1;
  inline bool has_host() const;
  inline void clear_host();
  static const int kHostFieldNumber = 1;
  inline const ::std::string& host() const;
  inline void set_host(const ::std::string& value);
  inline void set_host(const char* value);
  inline void set_host(const char* value, size_t size);
  inline ::std::string* mutable_host();
  
  static const int kMessageSetExtensionFieldNumber = 4747123;
  static ::google::protobuf::internal::ExtensionIdentifier< ::pagespeed::ResultDetails,
      ::google::protobuf::internal::MessageTypeTraits< ::pagespeed::ParallelizableHostDetails >, 11, false >
    message_set_extension;
  // @@protoc_insertion_point(class_scope:pagespeed.ParallelizableHostDetails)
 private:
  mutable int _cached_size_;
  
  ::std::string* host_;
  static const ::std::string _default_host_;
  friend void  protobuf_AddDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_AssignDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_ShutdownFile_pagespeed_5foutput_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ParallelizableHostDetails* default_instance_;
};
// -------------------------------------------------------------------

class AvoidCssImportDetails : public ::google::protobuf::MessageLite {
 public:
  AvoidCssImportDetails();
  virtual ~AvoidCssImportDetails();
  
  AvoidCssImportDetails(const AvoidCssImportDetails& from);
  
  inline AvoidCssImportDetails& operator=(const AvoidCssImportDetails& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const AvoidCssImportDetails& default_instance();
  
  void Swap(AvoidCssImportDetails* other);
  
  // implements Message ----------------------------------------------
  
  AvoidCssImportDetails* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const AvoidCssImportDetails& from);
  void MergeFrom(const AvoidCssImportDetails& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated string imported_stylesheets = 1;
  inline int imported_stylesheets_size() const;
  inline void clear_imported_stylesheets();
  static const int kImportedStylesheetsFieldNumber = 1;
  inline const ::std::string& imported_stylesheets(int index) const;
  inline ::std::string* mutable_imported_stylesheets(int index);
  inline void set_imported_stylesheets(int index, const ::std::string& value);
  inline void set_imported_stylesheets(int index, const char* value);
  inline void set_imported_stylesheets(int index, const char* value, size_t size);
  inline ::std::string* add_imported_stylesheets();
  inline void add_imported_stylesheets(const ::std::string& value);
  inline void add_imported_stylesheets(const char* value);
  inline void add_imported_stylesheets(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& imported_stylesheets() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_imported_stylesheets();
  
  static const int kMessageSetExtensionFieldNumber = 4812144;
  static ::google::protobuf::internal::ExtensionIdentifier< ::pagespeed::ResultDetails,
      ::google::protobuf::internal::MessageTypeTraits< ::pagespeed::AvoidCssImportDetails >, 11, false >
    message_set_extension;
  // @@protoc_insertion_point(class_scope:pagespeed.AvoidCssImportDetails)
 private:
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> imported_stylesheets_;
  friend void  protobuf_AddDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_AssignDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_ShutdownFile_pagespeed_5foutput_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static AvoidCssImportDetails* default_instance_;
};
// -------------------------------------------------------------------

class AvoidDocumentWriteDetails : public ::google::protobuf::MessageLite {
 public:
  AvoidDocumentWriteDetails();
  virtual ~AvoidDocumentWriteDetails();
  
  AvoidDocumentWriteDetails(const AvoidDocumentWriteDetails& from);
  
  inline AvoidDocumentWriteDetails& operator=(const AvoidDocumentWriteDetails& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const AvoidDocumentWriteDetails& default_instance();
  
  void Swap(AvoidDocumentWriteDetails* other);
  
  // implements Message ----------------------------------------------
  
  AvoidDocumentWriteDetails* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const AvoidDocumentWriteDetails& from);
  void MergeFrom(const AvoidDocumentWriteDetails& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated string urls = 1;
  inline int urls_size() const;
  inline void clear_urls();
  static const int kUrlsFieldNumber = 1;
  inline const ::std::string& urls(int index) const;
  inline ::std::string* mutable_urls(int index);
  inline void set_urls(int index, const ::std::string& value);
  inline void set_urls(int index, const char* value);
  inline void set_urls(int index, const char* value, size_t size);
  inline ::std::string* add_urls();
  inline void add_urls(const ::std::string& value);
  inline void add_urls(const char* value);
  inline void add_urls(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& urls() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_urls();
  
  // required int32 line_number = 2;
  inline bool has_line_number() const;
  inline void clear_line_number();
  static const int kLineNumberFieldNumber = 2;
  inline ::google::protobuf::int32 line_number() const;
  inline void set_line_number(::google::protobuf::int32 value);
  
  static const int kMessageSetExtensionFieldNumber = 4277335;
  static ::google::protobuf::internal::ExtensionIdentifier< ::pagespeed::ResultDetails,
      ::google::protobuf::internal::MessageTypeTraits< ::pagespeed::AvoidDocumentWriteDetails >, 11, false >
    message_set_extension;
  // @@protoc_insertion_point(class_scope:pagespeed.AvoidDocumentWriteDetails)
 private:
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> urls_;
  ::google::protobuf::int32 line_number_;
  friend void  protobuf_AddDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_AssignDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_ShutdownFile_pagespeed_5foutput_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static AvoidDocumentWriteDetails* default_instance_;
};
// -------------------------------------------------------------------

class PreferAsyncResourcesDetails : public ::google::protobuf::MessageLite {
 public:
  PreferAsyncResourcesDetails();
  virtual ~PreferAsyncResourcesDetails();
  
  PreferAsyncResourcesDetails(const PreferAsyncResourcesDetails& from);
  
  inline PreferAsyncResourcesDetails& operator=(const PreferAsyncResourcesDetails& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const PreferAsyncResourcesDetails& default_instance();
  
  void Swap(PreferAsyncResourcesDetails* other);
  
  // implements Message ----------------------------------------------
  
  PreferAsyncResourcesDetails* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PreferAsyncResourcesDetails& from);
  void MergeFrom(const PreferAsyncResourcesDetails& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string resource_url = 1;
  inline bool has_resource_url() const;
  inline void clear_resource_url();
  static const int kResourceUrlFieldNumber = 1;
  inline const ::std::string& resource_url() const;
  inline void set_resource_url(const ::std::string& value);
  inline void set_resource_url(const char* value);
  inline void set_resource_url(const char* value, size_t size);
  inline ::std::string* mutable_resource_url();
  
  static const int kMessageSetExtensionFieldNumber = 5012199;
  static ::google::protobuf::internal::ExtensionIdentifier< ::pagespeed::ResultDetails,
      ::google::protobuf::internal::MessageTypeTraits< ::pagespeed::PreferAsyncResourcesDetails >, 11, false >
    message_set_extension;
  // @@protoc_insertion_point(class_scope:pagespeed.PreferAsyncResourcesDetails)
 private:
  mutable int _cached_size_;
  
  ::std::string* resource_url_;
  static const ::std::string _default_resource_url_;
  friend void  protobuf_AddDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_AssignDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_ShutdownFile_pagespeed_5foutput_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PreferAsyncResourcesDetails* default_instance_;
};
// -------------------------------------------------------------------

class Result : public ::google::protobuf::MessageLite {
 public:
  Result();
  virtual ~Result();
  
  Result(const Result& from);
  
  inline Result& operator=(const Result& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const Result& default_instance();
  
  void Swap(Result* other);
  
  // implements Message ----------------------------------------------
  
  Result* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Result& from);
  void MergeFrom(const Result& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string rule_name = 1;
  inline bool has_rule_name() const;
  inline void clear_rule_name();
  static const int kRuleNameFieldNumber = 1;
  inline const ::std::string& rule_name() const;
  inline void set_rule_name(const ::std::string& value);
  inline void set_rule_name(const char* value);
  inline void set_rule_name(const char* value, size_t size);
  inline ::std::string* mutable_rule_name();
  
  // optional .pagespeed.Savings savings = 2;
  inline bool has_savings() const;
  inline void clear_savings();
  static const int kSavingsFieldNumber = 2;
  inline const ::pagespeed::Savings& savings() const;
  inline ::pagespeed::Savings* mutable_savings();
  
  // repeated string resource_urls = 3;
  inline int resource_urls_size() const;
  inline void clear_resource_urls();
  static const int kResourceUrlsFieldNumber = 3;
  inline const ::std::string& resource_urls(int index) const;
  inline ::std::string* mutable_resource_urls(int index);
  inline void set_resource_urls(int index, const ::std::string& value);
  inline void set_resource_urls(int index, const char* value);
  inline void set_resource_urls(int index, const char* value, size_t size);
  inline ::std::string* add_resource_urls();
  inline void add_resource_urls(const ::std::string& value);
  inline void add_resource_urls(const char* value);
  inline void add_resource_urls(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& resource_urls() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_resource_urls();
  
  // optional .pagespeed.ResultDetails details = 4;
  inline bool has_details() const;
  inline void clear_details();
  static const int kDetailsFieldNumber = 4;
  inline const ::pagespeed::ResultDetails& details() const;
  inline ::pagespeed::ResultDetails* mutable_details();
  
  // optional bytes optimized_content = 5;
  inline bool has_optimized_content() const;
  inline void clear_optimized_content();
  static const int kOptimizedContentFieldNumber = 5;
  inline const ::std::string& optimized_content() const;
  inline void set_optimized_content(const ::std::string& value);
  inline void set_optimized_content(const char* value);
  inline void set_optimized_content(const void* value, size_t size);
  inline ::std::string* mutable_optimized_content();
  
  // optional int32 original_response_bytes = 6;
  inline bool has_original_response_bytes() const;
  inline void clear_original_response_bytes();
  static const int kOriginalResponseBytesFieldNumber = 6;
  inline ::google::protobuf::int32 original_response_bytes() const;
  inline void set_original_response_bytes(::google::protobuf::int32 value);
  
  // optional int32 original_request_bytes = 7;
  inline bool has_original_request_bytes() const;
  inline void clear_original_request_bytes();
  static const int kOriginalRequestBytesFieldNumber = 7;
  inline ::google::protobuf::int32 original_request_bytes() const;
  inline void set_original_request_bytes(::google::protobuf::int32 value);
  
  // optional int32 original_critical_path_length = 8;
  inline bool has_original_critical_path_length() const;
  inline void clear_original_critical_path_length();
  static const int kOriginalCriticalPathLengthFieldNumber = 8;
  inline ::google::protobuf::int32 original_critical_path_length() const;
  inline void set_original_critical_path_length(::google::protobuf::int32 value);
  
  // optional string optimized_content_mime_type = 9;
  inline bool has_optimized_content_mime_type() const;
  inline void clear_optimized_content_mime_type();
  static const int kOptimizedContentMimeTypeFieldNumber = 9;
  inline const ::std::string& optimized_content_mime_type() const;
  inline void set_optimized_content_mime_type(const ::std::string& value);
  inline void set_optimized_content_mime_type(const char* value);
  inline void set_optimized_content_mime_type(const char* value, size_t size);
  inline ::std::string* mutable_optimized_content_mime_type();
  
  // @@protoc_insertion_point(class_scope:pagespeed.Result)
 private:
  mutable int _cached_size_;
  
  ::std::string* rule_name_;
  static const ::std::string _default_rule_name_;
  ::pagespeed::Savings* savings_;
  ::google::protobuf::RepeatedPtrField< ::std::string> resource_urls_;
  ::pagespeed::ResultDetails* details_;
  ::std::string* optimized_content_;
  static const ::std::string _default_optimized_content_;
  ::google::protobuf::int32 original_response_bytes_;
  ::google::protobuf::int32 original_request_bytes_;
  ::google::protobuf::int32 original_critical_path_length_;
  ::std::string* optimized_content_mime_type_;
  static const ::std::string _default_optimized_content_mime_type_;
  friend void  protobuf_AddDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_AssignDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_ShutdownFile_pagespeed_5foutput_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Result* default_instance_;
};
// -------------------------------------------------------------------

class Version : public ::google::protobuf::MessageLite {
 public:
  Version();
  virtual ~Version();
  
  Version(const Version& from);
  
  inline Version& operator=(const Version& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const Version& default_instance();
  
  void Swap(Version* other);
  
  // implements Message ----------------------------------------------
  
  Version* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Version& from);
  void MergeFrom(const Version& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 major = 1;
  inline bool has_major() const;
  inline void clear_major();
  static const int kMajorFieldNumber = 1;
  inline ::google::protobuf::int32 major() const;
  inline void set_major(::google::protobuf::int32 value);
  
  // required int32 minor = 2;
  inline bool has_minor() const;
  inline void clear_minor();
  static const int kMinorFieldNumber = 2;
  inline ::google::protobuf::int32 minor() const;
  inline void set_minor(::google::protobuf::int32 value);
  
  // required bool official_release = 3;
  inline bool has_official_release() const;
  inline void clear_official_release();
  static const int kOfficialReleaseFieldNumber = 3;
  inline bool official_release() const;
  inline void set_official_release(bool value);
  
  // @@protoc_insertion_point(class_scope:pagespeed.Version)
 private:
  mutable int _cached_size_;
  
  ::google::protobuf::int32 major_;
  ::google::protobuf::int32 minor_;
  bool official_release_;
  friend void  protobuf_AddDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_AssignDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_ShutdownFile_pagespeed_5foutput_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Version* default_instance_;
};
// -------------------------------------------------------------------

class Results : public ::google::protobuf::MessageLite {
 public:
  Results();
  virtual ~Results();
  
  Results(const Results& from);
  
  inline Results& operator=(const Results& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const Results& default_instance();
  
  void Swap(Results* other);
  
  // implements Message ----------------------------------------------
  
  Results* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Results& from);
  void MergeFrom(const Results& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .pagespeed.Result results = 1;
  inline int results_size() const;
  inline void clear_results();
  static const int kResultsFieldNumber = 1;
  inline const ::pagespeed::Result& results(int index) const;
  inline ::pagespeed::Result* mutable_results(int index);
  inline ::pagespeed::Result* add_results();
  inline const ::google::protobuf::RepeatedPtrField< ::pagespeed::Result >&
      results() const;
  inline ::google::protobuf::RepeatedPtrField< ::pagespeed::Result >*
      mutable_results();
  
  // required .pagespeed.InputInformation input_info = 2;
  inline bool has_input_info() const;
  inline void clear_input_info();
  static const int kInputInfoFieldNumber = 2;
  inline const ::pagespeed::InputInformation& input_info() const;
  inline ::pagespeed::InputInformation* mutable_input_info();
  
  // repeated string rules = 3;
  inline int rules_size() const;
  inline void clear_rules();
  static const int kRulesFieldNumber = 3;
  inline const ::std::string& rules(int index) const;
  inline ::std::string* mutable_rules(int index);
  inline void set_rules(int index, const ::std::string& value);
  inline void set_rules(int index, const char* value);
  inline void set_rules(int index, const char* value, size_t size);
  inline ::std::string* add_rules();
  inline void add_rules(const ::std::string& value);
  inline void add_rules(const char* value);
  inline void add_rules(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& rules() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_rules();
  
  // repeated string error_rules = 4;
  inline int error_rules_size() const;
  inline void clear_error_rules();
  static const int kErrorRulesFieldNumber = 4;
  inline const ::std::string& error_rules(int index) const;
  inline ::std::string* mutable_error_rules(int index);
  inline void set_error_rules(int index, const ::std::string& value);
  inline void set_error_rules(int index, const char* value);
  inline void set_error_rules(int index, const char* value, size_t size);
  inline ::std::string* add_error_rules();
  inline void add_error_rules(const ::std::string& value);
  inline void add_error_rules(const char* value);
  inline void add_error_rules(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& error_rules() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_error_rules();
  
  // required .pagespeed.Version version = 5;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 5;
  inline const ::pagespeed::Version& version() const;
  inline ::pagespeed::Version* mutable_version();
  
  // @@protoc_insertion_point(class_scope:pagespeed.Results)
 private:
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::pagespeed::Result > results_;
  ::pagespeed::InputInformation* input_info_;
  ::google::protobuf::RepeatedPtrField< ::std::string> rules_;
  ::google::protobuf::RepeatedPtrField< ::std::string> error_rules_;
  ::pagespeed::Version* version_;
  friend void  protobuf_AddDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_AssignDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_ShutdownFile_pagespeed_5foutput_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Results* default_instance_;
};
// -------------------------------------------------------------------

class FormatArgument : public ::google::protobuf::MessageLite {
 public:
  FormatArgument();
  virtual ~FormatArgument();
  
  FormatArgument(const FormatArgument& from);
  
  inline FormatArgument& operator=(const FormatArgument& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const FormatArgument& default_instance();
  
  void Swap(FormatArgument* other);
  
  // implements Message ----------------------------------------------
  
  FormatArgument* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const FormatArgument& from);
  void MergeFrom(const FormatArgument& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  typedef FormatArgument_ArgumentType ArgumentType;
  static const ArgumentType URL = FormatArgument_ArgumentType_URL;
  static const ArgumentType STRING_LITERAL = FormatArgument_ArgumentType_STRING_LITERAL;
  static const ArgumentType INT_LITERAL = FormatArgument_ArgumentType_INT_LITERAL;
  static const ArgumentType BYTES = FormatArgument_ArgumentType_BYTES;
  static const ArgumentType DURATION = FormatArgument_ArgumentType_DURATION;
  static inline bool ArgumentType_IsValid(int value) {
    return FormatArgument_ArgumentType_IsValid(value);
  }
  static const ArgumentType ArgumentType_MIN =
    FormatArgument_ArgumentType_ArgumentType_MIN;
  static const ArgumentType ArgumentType_MAX =
    FormatArgument_ArgumentType_ArgumentType_MAX;
  static const int ArgumentType_ARRAYSIZE =
    FormatArgument_ArgumentType_ArgumentType_ARRAYSIZE;
  
  // accessors -------------------------------------------------------
  
  // required .pagespeed.FormatArgument.ArgumentType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::pagespeed::FormatArgument_ArgumentType type() const;
  inline void set_type(::pagespeed::FormatArgument_ArgumentType value);
  
  // optional string string_value = 2;
  inline bool has_string_value() const;
  inline void clear_string_value();
  static const int kStringValueFieldNumber = 2;
  inline const ::std::string& string_value() const;
  inline void set_string_value(const ::std::string& value);
  inline void set_string_value(const char* value);
  inline void set_string_value(const char* value, size_t size);
  inline ::std::string* mutable_string_value();
  
  // optional int64 int_value = 3;
  inline bool has_int_value() const;
  inline void clear_int_value();
  static const int kIntValueFieldNumber = 3;
  inline ::google::protobuf::int64 int_value() const;
  inline void set_int_value(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:pagespeed.FormatArgument)
 private:
  mutable int _cached_size_;
  
  int type_;
  ::std::string* string_value_;
  static const ::std::string _default_string_value_;
  ::google::protobuf::int64 int_value_;
  friend void  protobuf_AddDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_AssignDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_ShutdownFile_pagespeed_5foutput_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static FormatArgument* default_instance_;
};
// -------------------------------------------------------------------

class ResultText : public ::google::protobuf::MessageLite {
 public:
  ResultText();
  virtual ~ResultText();
  
  ResultText(const ResultText& from);
  
  inline ResultText& operator=(const ResultText& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const ResultText& default_instance();
  
  void Swap(ResultText* other);
  
  // implements Message ----------------------------------------------
  
  ResultText* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ResultText& from);
  void MergeFrom(const ResultText& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string format = 1;
  inline bool has_format() const;
  inline void clear_format();
  static const int kFormatFieldNumber = 1;
  inline const ::std::string& format() const;
  inline void set_format(const ::std::string& value);
  inline void set_format(const char* value);
  inline void set_format(const char* value, size_t size);
  inline ::std::string* mutable_format();
  
  // repeated .pagespeed.FormatArgument args = 2;
  inline int args_size() const;
  inline void clear_args();
  static const int kArgsFieldNumber = 2;
  inline const ::pagespeed::FormatArgument& args(int index) const;
  inline ::pagespeed::FormatArgument* mutable_args(int index);
  inline ::pagespeed::FormatArgument* add_args();
  inline const ::google::protobuf::RepeatedPtrField< ::pagespeed::FormatArgument >&
      args() const;
  inline ::google::protobuf::RepeatedPtrField< ::pagespeed::FormatArgument >*
      mutable_args();
  
  // repeated .pagespeed.ResultText children = 3;
  inline int children_size() const;
  inline void clear_children();
  static const int kChildrenFieldNumber = 3;
  inline const ::pagespeed::ResultText& children(int index) const;
  inline ::pagespeed::ResultText* mutable_children(int index);
  inline ::pagespeed::ResultText* add_children();
  inline const ::google::protobuf::RepeatedPtrField< ::pagespeed::ResultText >&
      children() const;
  inline ::google::protobuf::RepeatedPtrField< ::pagespeed::ResultText >*
      mutable_children();
  
  // optional bytes optimized_content = 4;
  inline bool has_optimized_content() const;
  inline void clear_optimized_content();
  static const int kOptimizedContentFieldNumber = 4;
  inline const ::std::string& optimized_content() const;
  inline void set_optimized_content(const ::std::string& value);
  inline void set_optimized_content(const char* value);
  inline void set_optimized_content(const void* value, size_t size);
  inline ::std::string* mutable_optimized_content();
  
  // @@protoc_insertion_point(class_scope:pagespeed.ResultText)
 private:
  mutable int _cached_size_;
  
  ::std::string* format_;
  static const ::std::string _default_format_;
  ::google::protobuf::RepeatedPtrField< ::pagespeed::FormatArgument > args_;
  ::google::protobuf::RepeatedPtrField< ::pagespeed::ResultText > children_;
  ::std::string* optimized_content_;
  static const ::std::string _default_optimized_content_;
  friend void  protobuf_AddDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_AssignDesc_pagespeed_5foutput_2eproto();
  friend void protobuf_ShutdownFile_pagespeed_5foutput_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ResultText* default_instance_;
};
// ===================================================================


// ===================================================================

// Savings

// optional int32 dns_requests_saved = 1;
inline bool Savings::has_dns_requests_saved() const {
  return _has_bit(0);
}
inline void Savings::clear_dns_requests_saved() {
  dns_requests_saved_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 Savings::dns_requests_saved() const {
  return dns_requests_saved_;
}
inline void Savings::set_dns_requests_saved(::google::protobuf::int32 value) {
  _set_bit(0);
  dns_requests_saved_ = value;
}

// optional int32 requests_saved = 2;
inline bool Savings::has_requests_saved() const {
  return _has_bit(1);
}
inline void Savings::clear_requests_saved() {
  requests_saved_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 Savings::requests_saved() const {
  return requests_saved_;
}
inline void Savings::set_requests_saved(::google::protobuf::int32 value) {
  _set_bit(1);
  requests_saved_ = value;
}

// optional int32 response_bytes_saved = 3;
inline bool Savings::has_response_bytes_saved() const {
  return _has_bit(2);
}
inline void Savings::clear_response_bytes_saved() {
  response_bytes_saved_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 Savings::response_bytes_saved() const {
  return response_bytes_saved_;
}
inline void Savings::set_response_bytes_saved(::google::protobuf::int32 value) {
  _set_bit(2);
  response_bytes_saved_ = value;
}

// optional int32 page_reflows_saved = 4;
inline bool Savings::has_page_reflows_saved() const {
  return _has_bit(3);
}
inline void Savings::clear_page_reflows_saved() {
  page_reflows_saved_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 Savings::page_reflows_saved() const {
  return page_reflows_saved_;
}
inline void Savings::set_page_reflows_saved(::google::protobuf::int32 value) {
  _set_bit(3);
  page_reflows_saved_ = value;
}

// optional int32 request_bytes_saved = 5;
inline bool Savings::has_request_bytes_saved() const {
  return _has_bit(4);
}
inline void Savings::clear_request_bytes_saved() {
  request_bytes_saved_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 Savings::request_bytes_saved() const {
  return request_bytes_saved_;
}
inline void Savings::set_request_bytes_saved(::google::protobuf::int32 value) {
  _set_bit(4);
  request_bytes_saved_ = value;
}

// optional int32 critical_path_length_saved = 6;
inline bool Savings::has_critical_path_length_saved() const {
  return _has_bit(5);
}
inline void Savings::clear_critical_path_length_saved() {
  critical_path_length_saved_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 Savings::critical_path_length_saved() const {
  return critical_path_length_saved_;
}
inline void Savings::set_critical_path_length_saved(::google::protobuf::int32 value) {
  _set_bit(5);
  critical_path_length_saved_ = value;
}

// -------------------------------------------------------------------

// InputInformation

// optional int32 number_resources = 1;
inline bool InputInformation::has_number_resources() const {
  return _has_bit(0);
}
inline void InputInformation::clear_number_resources() {
  number_resources_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 InputInformation::number_resources() const {
  return number_resources_;
}
inline void InputInformation::set_number_resources(::google::protobuf::int32 value) {
  _set_bit(0);
  number_resources_ = value;
}

// optional int32 number_hosts = 2;
inline bool InputInformation::has_number_hosts() const {
  return _has_bit(1);
}
inline void InputInformation::clear_number_hosts() {
  number_hosts_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 InputInformation::number_hosts() const {
  return number_hosts_;
}
inline void InputInformation::set_number_hosts(::google::protobuf::int32 value) {
  _set_bit(1);
  number_hosts_ = value;
}

// optional int64 total_request_bytes = 4;
inline bool InputInformation::has_total_request_bytes() const {
  return _has_bit(2);
}
inline void InputInformation::clear_total_request_bytes() {
  total_request_bytes_ = GOOGLE_LONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::int64 InputInformation::total_request_bytes() const {
  return total_request_bytes_;
}
inline void InputInformation::set_total_request_bytes(::google::protobuf::int64 value) {
  _set_bit(2);
  total_request_bytes_ = value;
}

// optional int32 number_static_resources = 5;
inline bool InputInformation::has_number_static_resources() const {
  return _has_bit(3);
}
inline void InputInformation::clear_number_static_resources() {
  number_static_resources_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 InputInformation::number_static_resources() const {
  return number_static_resources_;
}
inline void InputInformation::set_number_static_resources(::google::protobuf::int32 value) {
  _set_bit(3);
  number_static_resources_ = value;
}

// optional int64 html_response_bytes = 6;
inline bool InputInformation::has_html_response_bytes() const {
  return _has_bit(4);
}
inline void InputInformation::clear_html_response_bytes() {
  html_response_bytes_ = GOOGLE_LONGLONG(0);
  _clear_bit(4);
}
inline ::google::protobuf::int64 InputInformation::html_response_bytes() const {
  return html_response_bytes_;
}
inline void InputInformation::set_html_response_bytes(::google::protobuf::int64 value) {
  _set_bit(4);
  html_response_bytes_ = value;
}

// optional int64 text_response_bytes = 7;
inline bool InputInformation::has_text_response_bytes() const {
  return _has_bit(5);
}
inline void InputInformation::clear_text_response_bytes() {
  text_response_bytes_ = GOOGLE_LONGLONG(0);
  _clear_bit(5);
}
inline ::google::protobuf::int64 InputInformation::text_response_bytes() const {
  return text_response_bytes_;
}
inline void InputInformation::set_text_response_bytes(::google::protobuf::int64 value) {
  _set_bit(5);
  text_response_bytes_ = value;
}

// optional int64 css_response_bytes = 8;
inline bool InputInformation::has_css_response_bytes() const {
  return _has_bit(6);
}
inline void InputInformation::clear_css_response_bytes() {
  css_response_bytes_ = GOOGLE_LONGLONG(0);
  _clear_bit(6);
}
inline ::google::protobuf::int64 InputInformation::css_response_bytes() const {
  return css_response_bytes_;
}
inline void InputInformation::set_css_response_bytes(::google::protobuf::int64 value) {
  _set_bit(6);
  css_response_bytes_ = value;
}

// optional int64 image_response_bytes = 9;
inline bool InputInformation::has_image_response_bytes() const {
  return _has_bit(7);
}
inline void InputInformation::clear_image_response_bytes() {
  image_response_bytes_ = GOOGLE_LONGLONG(0);
  _clear_bit(7);
}
inline ::google::protobuf::int64 InputInformation::image_response_bytes() const {
  return image_response_bytes_;
}
inline void InputInformation::set_image_response_bytes(::google::protobuf::int64 value) {
  _set_bit(7);
  image_response_bytes_ = value;
}

// optional int64 javascript_response_bytes = 10;
inline bool InputInformation::has_javascript_response_bytes() const {
  return _has_bit(8);
}
inline void InputInformation::clear_javascript_response_bytes() {
  javascript_response_bytes_ = GOOGLE_LONGLONG(0);
  _clear_bit(8);
}
inline ::google::protobuf::int64 InputInformation::javascript_response_bytes() const {
  return javascript_response_bytes_;
}
inline void InputInformation::set_javascript_response_bytes(::google::protobuf::int64 value) {
  _set_bit(8);
  javascript_response_bytes_ = value;
}

// optional int64 flash_response_bytes = 11;
inline bool InputInformation::has_flash_response_bytes() const {
  return _has_bit(9);
}
inline void InputInformation::clear_flash_response_bytes() {
  flash_response_bytes_ = GOOGLE_LONGLONG(0);
  _clear_bit(9);
}
inline ::google::protobuf::int64 InputInformation::flash_response_bytes() const {
  return flash_response_bytes_;
}
inline void InputInformation::set_flash_response_bytes(::google::protobuf::int64 value) {
  _set_bit(9);
  flash_response_bytes_ = value;
}

// optional int64 other_response_bytes = 12;
inline bool InputInformation::has_other_response_bytes() const {
  return _has_bit(10);
}
inline void InputInformation::clear_other_response_bytes() {
  other_response_bytes_ = GOOGLE_LONGLONG(0);
  _clear_bit(10);
}
inline ::google::protobuf::int64 InputInformation::other_response_bytes() const {
  return other_response_bytes_;
}
inline void InputInformation::set_other_response_bytes(::google::protobuf::int64 value) {
  _set_bit(10);
  other_response_bytes_ = value;
}

// -------------------------------------------------------------------

// ResultDetails

// -------------------------------------------------------------------

// ImageDimensionDetails

// optional int32 expected_height = 1;
inline bool ImageDimensionDetails::has_expected_height() const {
  return _has_bit(0);
}
inline void ImageDimensionDetails::clear_expected_height() {
  expected_height_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 ImageDimensionDetails::expected_height() const {
  return expected_height_;
}
inline void ImageDimensionDetails::set_expected_height(::google::protobuf::int32 value) {
  _set_bit(0);
  expected_height_ = value;
}

// optional int32 expected_width = 2;
inline bool ImageDimensionDetails::has_expected_width() const {
  return _has_bit(1);
}
inline void ImageDimensionDetails::clear_expected_width() {
  expected_width_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 ImageDimensionDetails::expected_width() const {
  return expected_width_;
}
inline void ImageDimensionDetails::set_expected_width(::google::protobuf::int32 value) {
  _set_bit(1);
  expected_width_ = value;
}

// optional int32 actual_height = 3;
inline bool ImageDimensionDetails::has_actual_height() const {
  return _has_bit(2);
}
inline void ImageDimensionDetails::clear_actual_height() {
  actual_height_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 ImageDimensionDetails::actual_height() const {
  return actual_height_;
}
inline void ImageDimensionDetails::set_actual_height(::google::protobuf::int32 value) {
  _set_bit(2);
  actual_height_ = value;
}

// optional int32 actual_width = 4;
inline bool ImageDimensionDetails::has_actual_width() const {
  return _has_bit(3);
}
inline void ImageDimensionDetails::clear_actual_width() {
  actual_width_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 ImageDimensionDetails::actual_width() const {
  return actual_width_;
}
inline void ImageDimensionDetails::set_actual_width(::google::protobuf::int32 value) {
  _set_bit(3);
  actual_width_ = value;
}

// -------------------------------------------------------------------

// RequestDetails

// optional int32 url_length = 1;
inline bool RequestDetails::has_url_length() const {
  return _has_bit(0);
}
inline void RequestDetails::clear_url_length() {
  url_length_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 RequestDetails::url_length() const {
  return url_length_;
}
inline void RequestDetails::set_url_length(::google::protobuf::int32 value) {
  _set_bit(0);
  url_length_ = value;
}

// optional int32 cookie_length = 2;
inline bool RequestDetails::has_cookie_length() const {
  return _has_bit(1);
}
inline void RequestDetails::clear_cookie_length() {
  cookie_length_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 RequestDetails::cookie_length() const {
  return cookie_length_;
}
inline void RequestDetails::set_cookie_length(::google::protobuf::int32 value) {
  _set_bit(1);
  cookie_length_ = value;
}

// optional int32 referer_length = 3;
inline bool RequestDetails::has_referer_length() const {
  return _has_bit(2);
}
inline void RequestDetails::clear_referer_length() {
  referer_length_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 RequestDetails::referer_length() const {
  return referer_length_;
}
inline void RequestDetails::set_referer_length(::google::protobuf::int32 value) {
  _set_bit(2);
  referer_length_ = value;
}

// -------------------------------------------------------------------

// StylesInBodyDetails

// optional int32 num_inline_style_blocks = 1;
inline bool StylesInBodyDetails::has_num_inline_style_blocks() const {
  return _has_bit(0);
}
inline void StylesInBodyDetails::clear_num_inline_style_blocks() {
  num_inline_style_blocks_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 StylesInBodyDetails::num_inline_style_blocks() const {
  return num_inline_style_blocks_;
}
inline void StylesInBodyDetails::set_num_inline_style_blocks(::google::protobuf::int32 value) {
  _set_bit(0);
  num_inline_style_blocks_ = value;
}

// repeated string external_styles = 2;
inline int StylesInBodyDetails::external_styles_size() const {
  return external_styles_.size();
}
inline void StylesInBodyDetails::clear_external_styles() {
  external_styles_.Clear();
}
inline const ::std::string& StylesInBodyDetails::external_styles(int index) const {
  return external_styles_.Get(index);
}
inline ::std::string* StylesInBodyDetails::mutable_external_styles(int index) {
  return external_styles_.Mutable(index);
}
inline void StylesInBodyDetails::set_external_styles(int index, const ::std::string& value) {
  external_styles_.Mutable(index)->assign(value);
}
inline void StylesInBodyDetails::set_external_styles(int index, const char* value) {
  external_styles_.Mutable(index)->assign(value);
}
inline void StylesInBodyDetails::set_external_styles(int index, const char* value, size_t size) {
  external_styles_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StylesInBodyDetails::add_external_styles() {
  return external_styles_.Add();
}
inline void StylesInBodyDetails::add_external_styles(const ::std::string& value) {
  external_styles_.Add()->assign(value);
}
inline void StylesInBodyDetails::add_external_styles(const char* value) {
  external_styles_.Add()->assign(value);
}
inline void StylesInBodyDetails::add_external_styles(const char* value, size_t size) {
  external_styles_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
StylesInBodyDetails::external_styles() const {
  return external_styles_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
StylesInBodyDetails::mutable_external_styles() {
  return &external_styles_;
}

// -------------------------------------------------------------------

// ResourceOrderingDetails

// repeated string out_of_order_external_css = 1;
inline int ResourceOrderingDetails::out_of_order_external_css_size() const {
  return out_of_order_external_css_.size();
}
inline void ResourceOrderingDetails::clear_out_of_order_external_css() {
  out_of_order_external_css_.Clear();
}
inline const ::std::string& ResourceOrderingDetails::out_of_order_external_css(int index) const {
  return out_of_order_external_css_.Get(index);
}
inline ::std::string* ResourceOrderingDetails::mutable_out_of_order_external_css(int index) {
  return out_of_order_external_css_.Mutable(index);
}
inline void ResourceOrderingDetails::set_out_of_order_external_css(int index, const ::std::string& value) {
  out_of_order_external_css_.Mutable(index)->assign(value);
}
inline void ResourceOrderingDetails::set_out_of_order_external_css(int index, const char* value) {
  out_of_order_external_css_.Mutable(index)->assign(value);
}
inline void ResourceOrderingDetails::set_out_of_order_external_css(int index, const char* value, size_t size) {
  out_of_order_external_css_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResourceOrderingDetails::add_out_of_order_external_css() {
  return out_of_order_external_css_.Add();
}
inline void ResourceOrderingDetails::add_out_of_order_external_css(const ::std::string& value) {
  out_of_order_external_css_.Add()->assign(value);
}
inline void ResourceOrderingDetails::add_out_of_order_external_css(const char* value) {
  out_of_order_external_css_.Add()->assign(value);
}
inline void ResourceOrderingDetails::add_out_of_order_external_css(const char* value, size_t size) {
  out_of_order_external_css_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ResourceOrderingDetails::out_of_order_external_css() const {
  return out_of_order_external_css_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ResourceOrderingDetails::mutable_out_of_order_external_css() {
  return &out_of_order_external_css_;
}

// repeated int32 out_of_order_inline_scripts = 2;
inline int ResourceOrderingDetails::out_of_order_inline_scripts_size() const {
  return out_of_order_inline_scripts_.size();
}
inline void ResourceOrderingDetails::clear_out_of_order_inline_scripts() {
  out_of_order_inline_scripts_.Clear();
}
inline ::google::protobuf::int32 ResourceOrderingDetails::out_of_order_inline_scripts(int index) const {
  return out_of_order_inline_scripts_.Get(index);
}
inline void ResourceOrderingDetails::set_out_of_order_inline_scripts(int index, ::google::protobuf::int32 value) {
  out_of_order_inline_scripts_.Set(index, value);
}
inline void ResourceOrderingDetails::add_out_of_order_inline_scripts(::google::protobuf::int32 value) {
  out_of_order_inline_scripts_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ResourceOrderingDetails::out_of_order_inline_scripts() const {
  return out_of_order_inline_scripts_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ResourceOrderingDetails::mutable_out_of_order_inline_scripts() {
  return &out_of_order_inline_scripts_;
}

// -------------------------------------------------------------------

// CachingDetails

// optional int64 freshness_lifetime_millis = 1;
inline bool CachingDetails::has_freshness_lifetime_millis() const {
  return _has_bit(0);
}
inline void CachingDetails::clear_freshness_lifetime_millis() {
  freshness_lifetime_millis_ = GOOGLE_LONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::int64 CachingDetails::freshness_lifetime_millis() const {
  return freshness_lifetime_millis_;
}
inline void CachingDetails::set_freshness_lifetime_millis(::google::protobuf::int64 value) {
  _set_bit(0);
  freshness_lifetime_millis_ = value;
}

// optional bool is_heuristically_cacheable = 2;
inline bool CachingDetails::has_is_heuristically_cacheable() const {
  return _has_bit(1);
}
inline void CachingDetails::clear_is_heuristically_cacheable() {
  is_heuristically_cacheable_ = false;
  _clear_bit(1);
}
inline bool CachingDetails::is_heuristically_cacheable() const {
  return is_heuristically_cacheable_;
}
inline void CachingDetails::set_is_heuristically_cacheable(bool value) {
  _set_bit(1);
  is_heuristically_cacheable_ = value;
}

// -------------------------------------------------------------------

// ParallelizableHostDetails

// optional string host = 1;
inline bool ParallelizableHostDetails::has_host() const {
  return _has_bit(0);
}
inline void ParallelizableHostDetails::clear_host() {
  if (host_ != &_default_host_) {
    host_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& ParallelizableHostDetails::host() const {
  return *host_;
}
inline void ParallelizableHostDetails::set_host(const ::std::string& value) {
  _set_bit(0);
  if (host_ == &_default_host_) {
    host_ = new ::std::string;
  }
  host_->assign(value);
}
inline void ParallelizableHostDetails::set_host(const char* value) {
  _set_bit(0);
  if (host_ == &_default_host_) {
    host_ = new ::std::string;
  }
  host_->assign(value);
}
inline void ParallelizableHostDetails::set_host(const char* value, size_t size) {
  _set_bit(0);
  if (host_ == &_default_host_) {
    host_ = new ::std::string;
  }
  host_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ParallelizableHostDetails::mutable_host() {
  _set_bit(0);
  if (host_ == &_default_host_) {
    host_ = new ::std::string;
  }
  return host_;
}

// -------------------------------------------------------------------

// AvoidCssImportDetails

// repeated string imported_stylesheets = 1;
inline int AvoidCssImportDetails::imported_stylesheets_size() const {
  return imported_stylesheets_.size();
}
inline void AvoidCssImportDetails::clear_imported_stylesheets() {
  imported_stylesheets_.Clear();
}
inline const ::std::string& AvoidCssImportDetails::imported_stylesheets(int index) const {
  return imported_stylesheets_.Get(index);
}
inline ::std::string* AvoidCssImportDetails::mutable_imported_stylesheets(int index) {
  return imported_stylesheets_.Mutable(index);
}
inline void AvoidCssImportDetails::set_imported_stylesheets(int index, const ::std::string& value) {
  imported_stylesheets_.Mutable(index)->assign(value);
}
inline void AvoidCssImportDetails::set_imported_stylesheets(int index, const char* value) {
  imported_stylesheets_.Mutable(index)->assign(value);
}
inline void AvoidCssImportDetails::set_imported_stylesheets(int index, const char* value, size_t size) {
  imported_stylesheets_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AvoidCssImportDetails::add_imported_stylesheets() {
  return imported_stylesheets_.Add();
}
inline void AvoidCssImportDetails::add_imported_stylesheets(const ::std::string& value) {
  imported_stylesheets_.Add()->assign(value);
}
inline void AvoidCssImportDetails::add_imported_stylesheets(const char* value) {
  imported_stylesheets_.Add()->assign(value);
}
inline void AvoidCssImportDetails::add_imported_stylesheets(const char* value, size_t size) {
  imported_stylesheets_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AvoidCssImportDetails::imported_stylesheets() const {
  return imported_stylesheets_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AvoidCssImportDetails::mutable_imported_stylesheets() {
  return &imported_stylesheets_;
}

// -------------------------------------------------------------------

// AvoidDocumentWriteDetails

// repeated string urls = 1;
inline int AvoidDocumentWriteDetails::urls_size() const {
  return urls_.size();
}
inline void AvoidDocumentWriteDetails::clear_urls() {
  urls_.Clear();
}
inline const ::std::string& AvoidDocumentWriteDetails::urls(int index) const {
  return urls_.Get(index);
}
inline ::std::string* AvoidDocumentWriteDetails::mutable_urls(int index) {
  return urls_.Mutable(index);
}
inline void AvoidDocumentWriteDetails::set_urls(int index, const ::std::string& value) {
  urls_.Mutable(index)->assign(value);
}
inline void AvoidDocumentWriteDetails::set_urls(int index, const char* value) {
  urls_.Mutable(index)->assign(value);
}
inline void AvoidDocumentWriteDetails::set_urls(int index, const char* value, size_t size) {
  urls_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AvoidDocumentWriteDetails::add_urls() {
  return urls_.Add();
}
inline void AvoidDocumentWriteDetails::add_urls(const ::std::string& value) {
  urls_.Add()->assign(value);
}
inline void AvoidDocumentWriteDetails::add_urls(const char* value) {
  urls_.Add()->assign(value);
}
inline void AvoidDocumentWriteDetails::add_urls(const char* value, size_t size) {
  urls_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AvoidDocumentWriteDetails::urls() const {
  return urls_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AvoidDocumentWriteDetails::mutable_urls() {
  return &urls_;
}

// required int32 line_number = 2;
inline bool AvoidDocumentWriteDetails::has_line_number() const {
  return _has_bit(1);
}
inline void AvoidDocumentWriteDetails::clear_line_number() {
  line_number_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 AvoidDocumentWriteDetails::line_number() const {
  return line_number_;
}
inline void AvoidDocumentWriteDetails::set_line_number(::google::protobuf::int32 value) {
  _set_bit(1);
  line_number_ = value;
}

// -------------------------------------------------------------------

// PreferAsyncResourcesDetails

// required string resource_url = 1;
inline bool PreferAsyncResourcesDetails::has_resource_url() const {
  return _has_bit(0);
}
inline void PreferAsyncResourcesDetails::clear_resource_url() {
  if (resource_url_ != &_default_resource_url_) {
    resource_url_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& PreferAsyncResourcesDetails::resource_url() const {
  return *resource_url_;
}
inline void PreferAsyncResourcesDetails::set_resource_url(const ::std::string& value) {
  _set_bit(0);
  if (resource_url_ == &_default_resource_url_) {
    resource_url_ = new ::std::string;
  }
  resource_url_->assign(value);
}
inline void PreferAsyncResourcesDetails::set_resource_url(const char* value) {
  _set_bit(0);
  if (resource_url_ == &_default_resource_url_) {
    resource_url_ = new ::std::string;
  }
  resource_url_->assign(value);
}
inline void PreferAsyncResourcesDetails::set_resource_url(const char* value, size_t size) {
  _set_bit(0);
  if (resource_url_ == &_default_resource_url_) {
    resource_url_ = new ::std::string;
  }
  resource_url_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PreferAsyncResourcesDetails::mutable_resource_url() {
  _set_bit(0);
  if (resource_url_ == &_default_resource_url_) {
    resource_url_ = new ::std::string;
  }
  return resource_url_;
}

// -------------------------------------------------------------------

// Result

// required string rule_name = 1;
inline bool Result::has_rule_name() const {
  return _has_bit(0);
}
inline void Result::clear_rule_name() {
  if (rule_name_ != &_default_rule_name_) {
    rule_name_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& Result::rule_name() const {
  return *rule_name_;
}
inline void Result::set_rule_name(const ::std::string& value) {
  _set_bit(0);
  if (rule_name_ == &_default_rule_name_) {
    rule_name_ = new ::std::string;
  }
  rule_name_->assign(value);
}
inline void Result::set_rule_name(const char* value) {
  _set_bit(0);
  if (rule_name_ == &_default_rule_name_) {
    rule_name_ = new ::std::string;
  }
  rule_name_->assign(value);
}
inline void Result::set_rule_name(const char* value, size_t size) {
  _set_bit(0);
  if (rule_name_ == &_default_rule_name_) {
    rule_name_ = new ::std::string;
  }
  rule_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Result::mutable_rule_name() {
  _set_bit(0);
  if (rule_name_ == &_default_rule_name_) {
    rule_name_ = new ::std::string;
  }
  return rule_name_;
}

// optional .pagespeed.Savings savings = 2;
inline bool Result::has_savings() const {
  return _has_bit(1);
}
inline void Result::clear_savings() {
  if (savings_ != NULL) savings_->::pagespeed::Savings::Clear();
  _clear_bit(1);
}
inline const ::pagespeed::Savings& Result::savings() const {
  return savings_ != NULL ? *savings_ : *default_instance_->savings_;
}
inline ::pagespeed::Savings* Result::mutable_savings() {
  _set_bit(1);
  if (savings_ == NULL) savings_ = new ::pagespeed::Savings;
  return savings_;
}

// repeated string resource_urls = 3;
inline int Result::resource_urls_size() const {
  return resource_urls_.size();
}
inline void Result::clear_resource_urls() {
  resource_urls_.Clear();
}
inline const ::std::string& Result::resource_urls(int index) const {
  return resource_urls_.Get(index);
}
inline ::std::string* Result::mutable_resource_urls(int index) {
  return resource_urls_.Mutable(index);
}
inline void Result::set_resource_urls(int index, const ::std::string& value) {
  resource_urls_.Mutable(index)->assign(value);
}
inline void Result::set_resource_urls(int index, const char* value) {
  resource_urls_.Mutable(index)->assign(value);
}
inline void Result::set_resource_urls(int index, const char* value, size_t size) {
  resource_urls_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Result::add_resource_urls() {
  return resource_urls_.Add();
}
inline void Result::add_resource_urls(const ::std::string& value) {
  resource_urls_.Add()->assign(value);
}
inline void Result::add_resource_urls(const char* value) {
  resource_urls_.Add()->assign(value);
}
inline void Result::add_resource_urls(const char* value, size_t size) {
  resource_urls_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Result::resource_urls() const {
  return resource_urls_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Result::mutable_resource_urls() {
  return &resource_urls_;
}

// optional .pagespeed.ResultDetails details = 4;
inline bool Result::has_details() const {
  return _has_bit(3);
}
inline void Result::clear_details() {
  if (details_ != NULL) details_->::pagespeed::ResultDetails::Clear();
  _clear_bit(3);
}
inline const ::pagespeed::ResultDetails& Result::details() const {
  return details_ != NULL ? *details_ : *default_instance_->details_;
}
inline ::pagespeed::ResultDetails* Result::mutable_details() {
  _set_bit(3);
  if (details_ == NULL) details_ = new ::pagespeed::ResultDetails;
  return details_;
}

// optional bytes optimized_content = 5;
inline bool Result::has_optimized_content() const {
  return _has_bit(4);
}
inline void Result::clear_optimized_content() {
  if (optimized_content_ != &_default_optimized_content_) {
    optimized_content_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& Result::optimized_content() const {
  return *optimized_content_;
}
inline void Result::set_optimized_content(const ::std::string& value) {
  _set_bit(4);
  if (optimized_content_ == &_default_optimized_content_) {
    optimized_content_ = new ::std::string;
  }
  optimized_content_->assign(value);
}
inline void Result::set_optimized_content(const char* value) {
  _set_bit(4);
  if (optimized_content_ == &_default_optimized_content_) {
    optimized_content_ = new ::std::string;
  }
  optimized_content_->assign(value);
}
inline void Result::set_optimized_content(const void* value, size_t size) {
  _set_bit(4);
  if (optimized_content_ == &_default_optimized_content_) {
    optimized_content_ = new ::std::string;
  }
  optimized_content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Result::mutable_optimized_content() {
  _set_bit(4);
  if (optimized_content_ == &_default_optimized_content_) {
    optimized_content_ = new ::std::string;
  }
  return optimized_content_;
}

// optional int32 original_response_bytes = 6;
inline bool Result::has_original_response_bytes() const {
  return _has_bit(5);
}
inline void Result::clear_original_response_bytes() {
  original_response_bytes_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 Result::original_response_bytes() const {
  return original_response_bytes_;
}
inline void Result::set_original_response_bytes(::google::protobuf::int32 value) {
  _set_bit(5);
  original_response_bytes_ = value;
}

// optional int32 original_request_bytes = 7;
inline bool Result::has_original_request_bytes() const {
  return _has_bit(6);
}
inline void Result::clear_original_request_bytes() {
  original_request_bytes_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 Result::original_request_bytes() const {
  return original_request_bytes_;
}
inline void Result::set_original_request_bytes(::google::protobuf::int32 value) {
  _set_bit(6);
  original_request_bytes_ = value;
}

// optional int32 original_critical_path_length = 8;
inline bool Result::has_original_critical_path_length() const {
  return _has_bit(7);
}
inline void Result::clear_original_critical_path_length() {
  original_critical_path_length_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 Result::original_critical_path_length() const {
  return original_critical_path_length_;
}
inline void Result::set_original_critical_path_length(::google::protobuf::int32 value) {
  _set_bit(7);
  original_critical_path_length_ = value;
}

// optional string optimized_content_mime_type = 9;
inline bool Result::has_optimized_content_mime_type() const {
  return _has_bit(8);
}
inline void Result::clear_optimized_content_mime_type() {
  if (optimized_content_mime_type_ != &_default_optimized_content_mime_type_) {
    optimized_content_mime_type_->clear();
  }
  _clear_bit(8);
}
inline const ::std::string& Result::optimized_content_mime_type() const {
  return *optimized_content_mime_type_;
}
inline void Result::set_optimized_content_mime_type(const ::std::string& value) {
  _set_bit(8);
  if (optimized_content_mime_type_ == &_default_optimized_content_mime_type_) {
    optimized_content_mime_type_ = new ::std::string;
  }
  optimized_content_mime_type_->assign(value);
}
inline void Result::set_optimized_content_mime_type(const char* value) {
  _set_bit(8);
  if (optimized_content_mime_type_ == &_default_optimized_content_mime_type_) {
    optimized_content_mime_type_ = new ::std::string;
  }
  optimized_content_mime_type_->assign(value);
}
inline void Result::set_optimized_content_mime_type(const char* value, size_t size) {
  _set_bit(8);
  if (optimized_content_mime_type_ == &_default_optimized_content_mime_type_) {
    optimized_content_mime_type_ = new ::std::string;
  }
  optimized_content_mime_type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Result::mutable_optimized_content_mime_type() {
  _set_bit(8);
  if (optimized_content_mime_type_ == &_default_optimized_content_mime_type_) {
    optimized_content_mime_type_ = new ::std::string;
  }
  return optimized_content_mime_type_;
}

// -------------------------------------------------------------------

// Version

// required int32 major = 1;
inline bool Version::has_major() const {
  return _has_bit(0);
}
inline void Version::clear_major() {
  major_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 Version::major() const {
  return major_;
}
inline void Version::set_major(::google::protobuf::int32 value) {
  _set_bit(0);
  major_ = value;
}

// required int32 minor = 2;
inline bool Version::has_minor() const {
  return _has_bit(1);
}
inline void Version::clear_minor() {
  minor_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 Version::minor() const {
  return minor_;
}
inline void Version::set_minor(::google::protobuf::int32 value) {
  _set_bit(1);
  minor_ = value;
}

// required bool official_release = 3;
inline bool Version::has_official_release() const {
  return _has_bit(2);
}
inline void Version::clear_official_release() {
  official_release_ = false;
  _clear_bit(2);
}
inline bool Version::official_release() const {
  return official_release_;
}
inline void Version::set_official_release(bool value) {
  _set_bit(2);
  official_release_ = value;
}

// -------------------------------------------------------------------

// Results

// repeated .pagespeed.Result results = 1;
inline int Results::results_size() const {
  return results_.size();
}
inline void Results::clear_results() {
  results_.Clear();
}
inline const ::pagespeed::Result& Results::results(int index) const {
  return results_.Get(index);
}
inline ::pagespeed::Result* Results::mutable_results(int index) {
  return results_.Mutable(index);
}
inline ::pagespeed::Result* Results::add_results() {
  return results_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pagespeed::Result >&
Results::results() const {
  return results_;
}
inline ::google::protobuf::RepeatedPtrField< ::pagespeed::Result >*
Results::mutable_results() {
  return &results_;
}

// required .pagespeed.InputInformation input_info = 2;
inline bool Results::has_input_info() const {
  return _has_bit(1);
}
inline void Results::clear_input_info() {
  if (input_info_ != NULL) input_info_->::pagespeed::InputInformation::Clear();
  _clear_bit(1);
}
inline const ::pagespeed::InputInformation& Results::input_info() const {
  return input_info_ != NULL ? *input_info_ : *default_instance_->input_info_;
}
inline ::pagespeed::InputInformation* Results::mutable_input_info() {
  _set_bit(1);
  if (input_info_ == NULL) input_info_ = new ::pagespeed::InputInformation;
  return input_info_;
}

// repeated string rules = 3;
inline int Results::rules_size() const {
  return rules_.size();
}
inline void Results::clear_rules() {
  rules_.Clear();
}
inline const ::std::string& Results::rules(int index) const {
  return rules_.Get(index);
}
inline ::std::string* Results::mutable_rules(int index) {
  return rules_.Mutable(index);
}
inline void Results::set_rules(int index, const ::std::string& value) {
  rules_.Mutable(index)->assign(value);
}
inline void Results::set_rules(int index, const char* value) {
  rules_.Mutable(index)->assign(value);
}
inline void Results::set_rules(int index, const char* value, size_t size) {
  rules_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Results::add_rules() {
  return rules_.Add();
}
inline void Results::add_rules(const ::std::string& value) {
  rules_.Add()->assign(value);
}
inline void Results::add_rules(const char* value) {
  rules_.Add()->assign(value);
}
inline void Results::add_rules(const char* value, size_t size) {
  rules_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Results::rules() const {
  return rules_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Results::mutable_rules() {
  return &rules_;
}

// repeated string error_rules = 4;
inline int Results::error_rules_size() const {
  return error_rules_.size();
}
inline void Results::clear_error_rules() {
  error_rules_.Clear();
}
inline const ::std::string& Results::error_rules(int index) const {
  return error_rules_.Get(index);
}
inline ::std::string* Results::mutable_error_rules(int index) {
  return error_rules_.Mutable(index);
}
inline void Results::set_error_rules(int index, const ::std::string& value) {
  error_rules_.Mutable(index)->assign(value);
}
inline void Results::set_error_rules(int index, const char* value) {
  error_rules_.Mutable(index)->assign(value);
}
inline void Results::set_error_rules(int index, const char* value, size_t size) {
  error_rules_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Results::add_error_rules() {
  return error_rules_.Add();
}
inline void Results::add_error_rules(const ::std::string& value) {
  error_rules_.Add()->assign(value);
}
inline void Results::add_error_rules(const char* value) {
  error_rules_.Add()->assign(value);
}
inline void Results::add_error_rules(const char* value, size_t size) {
  error_rules_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Results::error_rules() const {
  return error_rules_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Results::mutable_error_rules() {
  return &error_rules_;
}

// required .pagespeed.Version version = 5;
inline bool Results::has_version() const {
  return _has_bit(4);
}
inline void Results::clear_version() {
  if (version_ != NULL) version_->::pagespeed::Version::Clear();
  _clear_bit(4);
}
inline const ::pagespeed::Version& Results::version() const {
  return version_ != NULL ? *version_ : *default_instance_->version_;
}
inline ::pagespeed::Version* Results::mutable_version() {
  _set_bit(4);
  if (version_ == NULL) version_ = new ::pagespeed::Version;
  return version_;
}

// -------------------------------------------------------------------

// FormatArgument

// required .pagespeed.FormatArgument.ArgumentType type = 1;
inline bool FormatArgument::has_type() const {
  return _has_bit(0);
}
inline void FormatArgument::clear_type() {
  type_ = 1;
  _clear_bit(0);
}
inline ::pagespeed::FormatArgument_ArgumentType FormatArgument::type() const {
  return static_cast< ::pagespeed::FormatArgument_ArgumentType >(type_);
}
inline void FormatArgument::set_type(::pagespeed::FormatArgument_ArgumentType value) {
  GOOGLE_DCHECK(::pagespeed::FormatArgument_ArgumentType_IsValid(value));
  _set_bit(0);
  type_ = value;
}

// optional string string_value = 2;
inline bool FormatArgument::has_string_value() const {
  return _has_bit(1);
}
inline void FormatArgument::clear_string_value() {
  if (string_value_ != &_default_string_value_) {
    string_value_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& FormatArgument::string_value() const {
  return *string_value_;
}
inline void FormatArgument::set_string_value(const ::std::string& value) {
  _set_bit(1);
  if (string_value_ == &_default_string_value_) {
    string_value_ = new ::std::string;
  }
  string_value_->assign(value);
}
inline void FormatArgument::set_string_value(const char* value) {
  _set_bit(1);
  if (string_value_ == &_default_string_value_) {
    string_value_ = new ::std::string;
  }
  string_value_->assign(value);
}
inline void FormatArgument::set_string_value(const char* value, size_t size) {
  _set_bit(1);
  if (string_value_ == &_default_string_value_) {
    string_value_ = new ::std::string;
  }
  string_value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FormatArgument::mutable_string_value() {
  _set_bit(1);
  if (string_value_ == &_default_string_value_) {
    string_value_ = new ::std::string;
  }
  return string_value_;
}

// optional int64 int_value = 3;
inline bool FormatArgument::has_int_value() const {
  return _has_bit(2);
}
inline void FormatArgument::clear_int_value() {
  int_value_ = GOOGLE_LONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::int64 FormatArgument::int_value() const {
  return int_value_;
}
inline void FormatArgument::set_int_value(::google::protobuf::int64 value) {
  _set_bit(2);
  int_value_ = value;
}

// -------------------------------------------------------------------

// ResultText

// optional string format = 1;
inline bool ResultText::has_format() const {
  return _has_bit(0);
}
inline void ResultText::clear_format() {
  if (format_ != &_default_format_) {
    format_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& ResultText::format() const {
  return *format_;
}
inline void ResultText::set_format(const ::std::string& value) {
  _set_bit(0);
  if (format_ == &_default_format_) {
    format_ = new ::std::string;
  }
  format_->assign(value);
}
inline void ResultText::set_format(const char* value) {
  _set_bit(0);
  if (format_ == &_default_format_) {
    format_ = new ::std::string;
  }
  format_->assign(value);
}
inline void ResultText::set_format(const char* value, size_t size) {
  _set_bit(0);
  if (format_ == &_default_format_) {
    format_ = new ::std::string;
  }
  format_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResultText::mutable_format() {
  _set_bit(0);
  if (format_ == &_default_format_) {
    format_ = new ::std::string;
  }
  return format_;
}

// repeated .pagespeed.FormatArgument args = 2;
inline int ResultText::args_size() const {
  return args_.size();
}
inline void ResultText::clear_args() {
  args_.Clear();
}
inline const ::pagespeed::FormatArgument& ResultText::args(int index) const {
  return args_.Get(index);
}
inline ::pagespeed::FormatArgument* ResultText::mutable_args(int index) {
  return args_.Mutable(index);
}
inline ::pagespeed::FormatArgument* ResultText::add_args() {
  return args_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pagespeed::FormatArgument >&
ResultText::args() const {
  return args_;
}
inline ::google::protobuf::RepeatedPtrField< ::pagespeed::FormatArgument >*
ResultText::mutable_args() {
  return &args_;
}

// repeated .pagespeed.ResultText children = 3;
inline int ResultText::children_size() const {
  return children_.size();
}
inline void ResultText::clear_children() {
  children_.Clear();
}
inline const ::pagespeed::ResultText& ResultText::children(int index) const {
  return children_.Get(index);
}
inline ::pagespeed::ResultText* ResultText::mutable_children(int index) {
  return children_.Mutable(index);
}
inline ::pagespeed::ResultText* ResultText::add_children() {
  return children_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pagespeed::ResultText >&
ResultText::children() const {
  return children_;
}
inline ::google::protobuf::RepeatedPtrField< ::pagespeed::ResultText >*
ResultText::mutable_children() {
  return &children_;
}

// optional bytes optimized_content = 4;
inline bool ResultText::has_optimized_content() const {
  return _has_bit(3);
}
inline void ResultText::clear_optimized_content() {
  if (optimized_content_ != &_default_optimized_content_) {
    optimized_content_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& ResultText::optimized_content() const {
  return *optimized_content_;
}
inline void ResultText::set_optimized_content(const ::std::string& value) {
  _set_bit(3);
  if (optimized_content_ == &_default_optimized_content_) {
    optimized_content_ = new ::std::string;
  }
  optimized_content_->assign(value);
}
inline void ResultText::set_optimized_content(const char* value) {
  _set_bit(3);
  if (optimized_content_ == &_default_optimized_content_) {
    optimized_content_ = new ::std::string;
  }
  optimized_content_->assign(value);
}
inline void ResultText::set_optimized_content(const void* value, size_t size) {
  _set_bit(3);
  if (optimized_content_ == &_default_optimized_content_) {
    optimized_content_ = new ::std::string;
  }
  optimized_content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResultText::mutable_optimized_content() {
  _set_bit(3);
  if (optimized_content_ == &_default_optimized_content_) {
    optimized_content_ = new ::std::string;
  }
  return optimized_content_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pagespeed

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_pagespeed_5foutput_2eproto__INCLUDED
